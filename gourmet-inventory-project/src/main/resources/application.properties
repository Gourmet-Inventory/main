spring.application.name=gourmet-inventory-project
spring.main.allow-bean-definition-overriding=true
spring.jpa.defer-datasource-initialization=true

# Altera a estrutura da tabela caso a entidade tenha mudanças.
spring.jpa.hibernate.ddl-auto=update

server.error.include-message=always
server.error.include-binding-errors=always

# para habilitar a impressão dos comandos SQL no log:
spring.jpa.show-sql=true
# para que as instruções SQL sejam impressas "formatadas" (se isso fica uma linha enorme)
spring.jpa.properties.hibernate.format_sql=true

# URL do banco no H2 console. Depois de ":mem:" coloque o nome do seu banco, que pode ser, por exemplo, o nome da sua API
spring.datasource.url=jdbc:h2:mem:teste-security
# para habilitar o H2 Console
spring.h2.console.enabled=true
spring.datasource.username=admin
spring.datasource.password=admin



## My SQL Config
## Acesso ao banco de dados
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/db_inventory_gourmet
## Usuário do banco de dados
#spring.datasource.username=root
## Senha do banco de dados
#spring.datasource.password=Deus2004@

# validade do token
jwt.validity=3600000
# palavra passe do token (segredo) necessita de no minimo 32 caracteres
jwt.secret=rXhpc3RlIHVtYSBOZW9yaWEgcXV11GRpesIHN11HVt1y1GV4YXRhbWVudGUgcGFyYSBxdWUgc2VydmUgbyBVbm12ZXJzbyB11HBvctBxdWUgZWx11GVzdOEg


